#include "TrialGenInterface.s2s"

var weights%[10];
var nTypes% := 4;
var nBlocksRequired% := 1;

var ntrials%;
var i%;
var r%;
var status% := 0;
var index%;

ArrConst(weights%[], -1);
status% := tgwTestDialog%();
while status% <> 0 do
    
    i% := 0;
    while i% < 10 and weights%[i%] > -1 do
        i% += 1;
    wend
    nTypes% := i%;
    PrintLog("ntypes %d\n", nTypes%);
    tgwInit(nTypes%, weights%[0:nTypes%], nBlocksRequired%);

    ntrials% := trialgenGetTrialIndex%(index%);
    while ntrials% <> 0 do
            
        if ntrials% = 1 then
            r% := Rand(3, 0); 'PrintLog(" r=" + str$(r%) + " ");
            if r% <> 1 then
                PrintLog("%d ", index%);
                trialgenTrialIndexCompleted(index%);
            else 
                ' This is a trial that failed. Test that we still get full blocks.
                PrintLog("%dX ", index%);
            endif
            PrintLog("\n");
            Yield();
            ntrials% := trialgenGetTrialIndex%(index%);
        endif
        
    wend
        
    status% := tgwTestDialog%();
    
wend

func tgwTestDialog%()
    var s% := 0;
    ArrConst(weights%[], -1);
    DlgCreate("Tgw Test");
    DlgInteger(1, "Blocks required", 0, 100);
    for s% := 0 to 9 do
        DlgInteger(2+s%, "Weight " + str$(s%), -1, 100);
    next
    s% := DlgShow(nBlocksRequired%, 
    weights%[0], 
    weights%[1],
    weights%[2],
    weights%[3],
    weights%[4],
    weights%[5],
    weights%[6],
    weights%[7],
    weights%[8],
    weights%[9]
    );
    return s%;
end
